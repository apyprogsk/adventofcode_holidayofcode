def parse_game_strings(game_strings):
    all_games_data = []

    for game_string in game_strings:
        game_data = {}
        parts = game_string.split(': ')
        game_data['Game'] = int(parts[0].split()[1])

        cubes = parts[1].split('; ')
        for turn in cubes:
            colors = turn.split(', ')
            for cube in colors:
                cube_count, cube_color = cube.split()
                if cube_color not in game_data:
                    game_data[cube_color] = []
                game_data[cube_color].append(int(cube_count))

        all_games_data.append(game_data)

    return all_games_data

# Input game strings
game_strings = [
    'Game 1: 3 blue, 4 red; 1 red, 2 green, 6 blue; 2 green',
    'Game 2: 1 blue, 2 green; 3 green, 4 blue, 1 red; 1 green, 1 blue',
    'Game 3: 8 green, 6 blue, 20 red; 5 blue, 4 red, 13 green; 5 green, 1 red',
    'Game 4: 1 green, 3 red, 6 blue; 3 green, 6 red; 3 green, 15 blue, 14 red',
    'Game 5: 6 red, 1 blue, 3 green; 2 blue, 1 red, 2 green'
]

parsed_games = parse_game_strings(game_strings)
for game in parsed_games:
    print(game)










data = [
    {'Game': 1, 'blue': [3, 6], 'red': [4, 1], 'green': [2, 2]},
    {'Game': 2, 'blue': [1, 4, 1], 'green': [2, 3, 1], 'red': [1]},
    {'Game': 3, 'green': [8, 13, 5], 'blue': [6, 5], 'red': [20, 4, 1]},
    {'Game': 4, 'green': [1, 3, 3], 'red': [3, 6, 14], 'blue': [6, 15]},
    {'Game': 5, 'red': [6, 1], 'blue': [1, 2], 'green': [3, 2]}
]

filtered_data = []

for entry in data:
    red_values = entry.get('red', [])
    green_values = entry.get('green', [])
    blue_values = entry.get('blue', [])
    
    # Check conditions: red > 12, green > 13, blue > 14
    if any(val > 12 for val in red_values) or any(val > 13 for val in green_values) or any(val > 14 for val in blue_values):
        continue  # Skip this entry if conditions are met
    
    filtered_data.append(entry)

# Display the filtered data
for entry in filtered_data:
    print(entry)
